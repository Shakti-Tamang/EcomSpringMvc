<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--    for recokginig chinaune-->
    <!-- Enable MVC annotations processing   @controller handling client request-->
    <mvc:annotation-driven/>

    <!-- Component Scanning: Scan for controller classes   yesko ni main kam hamro package chinaune ho-->
    <context:component-scan base-package="com.nistcollege.ecom.controller"/>

    <!-- View Resolver Configuration: Resolve view names to actual JSP files -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- Data Source Configuration -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="username" value="postgres"/>
        <property name="password" value="Shakti"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/EcomTech"/>
    </bean>

    <!-- Hibernate Session Factory Configuration -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>com.nistcollege.ecom.model.Usermodel1</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>

    </bean>

    <!-- Transaction Manager Configuration -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Enable Transaction Annotations -->
    <!--  it is done to run transaction -->

    <!--    <tx:annotation-driven/> in Spring XML config makes sure that when
    you use @Transactional in your code, Spring handles database operations like
     saving or updating data correctly. It ensures that either all changes are
      applied together or none at all, so your data stays reliable and consistent.-->
    <tx:annotation-driven/>

    <!-- Service Beans  service haru chinauna-->

    <bean id="teacherDetail" class="com.nistcollege.ecom.service.UserServiceImpl"/>

</beans>
